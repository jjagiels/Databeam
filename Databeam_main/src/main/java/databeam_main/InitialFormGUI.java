/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databeam_main;

import java.util.*;
import java.sql.*;
import acr122u.*;
import javax.smartcardio.*;
import java.io.UnsupportedEncodingException;
import java.io.ByteArrayOutputStream;
import utils.*;

/**
 *
 * @author Databeam
 */
public class InitialFormGUI extends javax.swing.JFrame {

    /**
     * Creates new form InitialFormGUI
     */
    //private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    //private static final String DB_URL = "jdbc:mysql://108.52.101.66:3306/databeam";

    private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DB_URL = "jdbc:mysql://108.52.101.66:3306/databeam";
    
    //Database Credentials
    private static final String USER = "sDesign2017";
    private static final String PASS = "DatabeamDatabase2017";
    
    static Connection conn = null;
    Statement stmt = null;
    /**
     * Declare the variable 'name.' This variable will contain the values
     * the user entered into the "Name" section of the form in the order
     * 'first,' 'middle,' and 'last.' This list will be space-delimited.
     */
    String name = "";

    public InitialFormGUI() {
        /*Open the NFC device connection*/
        try{
        readNFC();
        } catch(CardException ce){
            ce.printStackTrace();
        } catch(UnsupportedEncodingException uce){
            uce.printStackTrace();
        }
        
        initComponents();
        /*Fill in the form fields from the NFC*/
        setFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        tempNameEchoLabel = new javax.swing.JLabel();
        middleNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Databeam Form");

        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });

        nameLabel.setText("First Name:");

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        acceptButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                acceptButtonKeyPressed(evt);
            }
        });

        tempNameEchoLabel.setText("Entered Name");

        jLabel1.setText("Middle Name:");

        jLabel2.setText("Last Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tempNameEchoLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(tempNameEchoLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed

        
        String nameEntry ="'" + firstNameField.getText() +"'" + "," + " " + "'" + middleNameField.getText() +"'" + "," + " " + "'" + lastNameField.getText() + "'";
        //nameEntry = 'firstname', 'middlename', 'lastname';
        
        Scanner nameScan = new Scanner(nameEntry);
        tempNameEchoLabel.setText(nameScan.next() + " " + nameScan.next() + " " + nameScan.next());
        nameScan.close();
        try{
        stmt = conn.createStatement();
        stmt.executeUpdate("INSERT INTO names (firstname, middlename, lastname) value(" + nameEntry + ")");
        }catch(SQLException se){
            se.printStackTrace();
        }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void acceptButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_acceptButtonKeyPressed

    }//GEN-LAST:event_acceptButtonKeyPressed

    /**
     * This method connects to a reader, waits for a card, then reads from that 
     * card to prep auto form-filling
     */
    
    private void readNFC() throws CardException, UnsupportedEncodingException {
        // show the list of available terminals
        TerminalFactory factory = TerminalFactory.getDefault();
        //List<CardTerminal> terminals = factory.terminals().list();
        CardTerminals terminals = factory.terminals();
        
        List<CardTerminal> tempForPrint = terminals.list();
        System.out.println("Terminals: " + tempForPrint.get(0));
        System.out.println("Place phone/card on reader to start");
        
        Card card = connectNFC.waitForCard(terminals);
        card.beginExclusive();
        
        System.out.println("card: " + card);  
        CardChannel channel = card.getBasicChannel();
        ResponseAPDU r = channel.transmit(new CommandAPDU(cAPDU.selectTestJavaApplet));
        System.out.println("response: " + r);
        System.out.println(hex.bytesToHex(r.getBytes()));
        System.out.println(hex.convertHexToString(hex.bytesToHex(r.getBytes())));
        
        byte[] byteMessage = r.getBytes();
        
        System.out.println(Arrays.toString(byteMessage));
        
        
        /**
         * This section will request the test hello from the smartcard applet
         */
        r= channel.transmit(new CommandAPDU(cAPDU.testHello));
        byteMessage = r.getBytes();
        System.out.println("response: " + r);
        System.out.println(Arrays.toString(byteMessage));
        System.out.println(hex.bytesToHex(byteMessage));
        System.out.println(hex.convertHexToString(hex.bytesToHex(byteMessage))); //Right here is where the byte response is converted to a string.
        
        name = hex.convertHexToString(hex.bytesToHex(byteMessage));
        
        card.disconnect(false);
    }
    /**
     * setFields() will use all the strings gathered from readNFC() and fill in 
     * the relevant fields for reading within the UI.
     */
    private void setFields(){
        Scanner nameScan = new Scanner(name);
        firstNameField.setText(nameScan.next());
        middleNameField.setText(nameScan.next());
        lastNameField.setText(nameScan.next());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InitialFormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InitialFormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InitialFormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InitialFormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Prep the Database connection */
        try{
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
        } catch(SQLException se){
        //Handle JDBC Errors
        se.printStackTrace();
        }catch(Exception e){
              //Handle errors for Class.forName
              e.printStackTrace();
        }
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InitialFormGUI().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField middleNameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel tempNameEchoLabel;
    // End of variables declaration//GEN-END:variables
}
